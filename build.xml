<?xml version="1.0"?>
<project name="TestBristamaticHibernate" default="all" basedir=".">

	<!-- Initialization variables -->
	<property name="thirdparty.lib.dir" value="libs" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="jar.file" value="${ant.project.name}.jar" />
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	<property name="config.dir" value="config" />
	<property name="database.dir" value="database" />

	<path id="project.classpath">
		<fileset dir="${thirdparty.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- ====================================== -->
	<target name="all" depends="jar" description="Does the whole enchilada" />


	<!-- ====================================== -->
	<target name="clean" description="Deletes compiled and generated code">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>


	<!-- ====================================== -->
	<target name="compile" description="Compiles the Java code">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir};${test.dir}" destdir="${build.dir}" debug="on">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- ====================================== -->
	<target name="jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/${jar.file}">
			<fileset dir="${build.dir}" />
		</jar>
	</target>

	<!-- ====================================== -->
	<!-- Generate a ddl file (requires META-INF/persistence.xml in classpath) -->
	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="project.classpath" />
	<target name="schemaexport" description="Exports a generated schema to DB and file">
		<hibernatetool destdir="config">
			<classpath path="${build.dir}" />
			<!-- Use META-INF/persistence.xml, can specify which persistence unit if mulitples exists -->
			<jpaconfiguration />
			<hbm2ddl drop="true" create="true" export="false" outputfilename="ddl.sql" delimiter=";" format="true" />
		</hibernatetool>
	</target>

	<!-- Start the HSQL DB server -->
	<target name="startdb" description="Run HSQL database server with clean DB">
		<!-- Delete database files -->
		<delete dir="${database.dir}" />
		<java classname="org.hsqldb.Server" fork="yes" classpathref="project.classpath" failonerror="true">
			<arg value="-database.0" />
			<arg value="file:${database.dir}/db" />
		</java>
	</target>

	<!-- Start the HSQL DB browser tool -->
	<target name="dbmanager" description="Start HSQL DB manager">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" fork="yes" classpathref="project.classpath" failonerror="true">
			<arg value="-url" />
			<arg value="jdbc:hsqldb:hsql://localhost/" />
			<arg value="-driver" />
			<arg value="org.hsqldb.jdbcDriver" />
		</java>
	</target>
</project>